import { useGetProductsQuery } from "@generated/api";
import Spinner from "@components/spinner/Spinner";
import Modal from "@components/modal/Modal";
import classes from "./Products.module.scss";
import { numberOfProducts } from "@utils/utils";
import Product from "@components/product/Product";

type ProductsProps = {
  keyword: string;
};

export default function Products({ keyword }: ProductsProps) {
  // Autogenerated hook for products, thanks to api.ts
  const { loading, error, data } = useGetProductsQuery({
    variables: {
      first: numberOfProducts,
      filter: { search: keyword },
    },
  });

  if (loading) return <Spinner />;
  if (error) return <Modal>Coul not fetch data. Please try again later.</Modal>;

  const products = data?.products?.edges || [];
  const total = data?.products?.totalCount;

  return (
    <section id="products">
      <p>Available products: {total}</p>
      <ul className={classes.products}>
        {products.map(({ node: product }) => {
          return <Product key={product.id} product={product} />;
        })}
      </ul>
    </section>
  );
}
